(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{525:function(t,s,a){t.exports=a.p+"assets/img/qml-hello-world.4e27e944.png"},526:function(t,s,a){t.exports=a.p+"assets/img/cpu-load-model.b4970d00.png"},655:function(t,s,a){"use strict";a.r(s);var n=a(24),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"building-an-application"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#building-an-application"}},[t._v("#")]),t._v(" Building an Application")]),t._v(" "),n("p",[t._v("In this chapter we will look at how you can combine Python and QML. The most natural way to combine the two worlds is to do as with C++ and QML, i.e. implement the logic in Python and the presentation in QML.")]),t._v(" "),n("p",[t._v("To do this, we need to understand how to combine QML and Python into a single program, and then how to implement interfaces between the two worlds. In the sub-sections below, we will look at how this is done. We will start simple and progress to an example exposing the capabilities of a Python module to QML through a Qt item model.")]),t._v(" "),n("h2",{attrs:{id:"running-qml-from-python"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#running-qml-from-python"}},[t._v("#")]),t._v(" Running QML from Python")]),t._v(" "),n("p",[t._v("The very first step is to create a Python program that can host the "),n("em",[t._v("Hello World")]),t._v(" QML program shown below.")]),t._v(" "),n("div",{staticClass:"language-qml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-qml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick.Window\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Window")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("640")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("480")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("visible")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Python World!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),n("p",[t._v("To do this, we need a Qt mainloop provided by "),n("code",[t._v("QGuiApplication")]),t._v(" from the "),n("code",[t._v("QtGui")]),t._v(" module. We also need a "),n("code",[t._v("QQmlApplicationEngine")]),t._v(" from the "),n("code",[t._v("QtQml")]),t._v(" module. In order to pass the reference to the source file to the QML application engine, we also need the "),n("code",[t._v("QUrl")]),t._v(" class from the "),n("code",[t._v("QtCore")]),t._v(" module.")]),t._v(" "),n("p",[t._v("In the code below we emulate the functionality of the boilerplate C++ code generated by Qt Creator for QML projects. It instanciates the application object, and creates a QML application engine. It then loads the QML and then ensures that the QML was loaded by checking if a root object was created. Finally, it exits and returns the value returned by the "),n("code",[t._v("exec")]),t._v(" method of the application object.")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtGui "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QGuiApplication\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtQml "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QQmlApplicationEngine\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QUrl\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    app "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QGuiApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    engine "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QQmlApplicationEngine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QUrl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main.qml"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rootObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])])]),n("p",[t._v("Executing the example results in a window with the title "),n("em",[t._v("Hello Python World")]),t._v(".")]),t._v(" "),n("p",[n("img",{attrs:{src:a(525),alt:""}})]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("The example assumes that it is executed from the directory containing the "),n("code",[t._v("main.qml")]),t._v(" source file. You can termine the location of the Python file being executed using the "),n("code",[t._v("__file__")]),t._v(" variable. This can be used to locate the QML files relative to the Python file as shown in this "),n("a",{attrs:{href:"http://blog.qt.io/blog/2018/05/14/qml-qt-python/",target:"_blank",rel:"noopener noreferrer"}},[t._v("blog post"),n("OutboundLink")],1),t._v(".")])]),t._v(" "),n("h2",{attrs:{id:"exposing-python-objects-to-qml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exposing-python-objects-to-qml"}},[t._v("#")]),t._v(" Exposing Python Objects to QML")]),t._v(" "),n("p",[t._v("The easiest way to share information between Python and QML is to expose a Python object to QML. This is done by registering a "),n("em",[t._v("context property")]),t._v(" through the "),n("code",[t._v("QQmlApplicationEngine")]),t._v(". Before we can do that, we need to define a class so that we have an object to expose.")]),t._v(" "),n("p",[t._v("Qt classes come with a number of features that we want to be able to use. These are: signals, slots and properties. In this first example, we will restrict ourselves to a basic pair of signal and slot. The rest will be covered in the examples further on.")]),t._v(" "),n("h3",{attrs:{id:"signals-and-slots"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#signals-and-slots"}},[t._v("#")]),t._v(" Signals and Slots")]),t._v(" "),n("p",[t._v("We start with the class "),n("code",[t._v("NumberGenerator")]),t._v(". It has a constructor, a method called "),n("code",[t._v("updateNumber")]),t._v(" and a signal called "),n("code",[t._v("nextNumber")]),t._v(". The idea is that when you call "),n("code",[t._v("updateNumber")]),t._v(", the signal "),n("code",[t._v("nextNumber")]),t._v(" is emitted with a new random number. You can see the code for the class below, but first we will look at the details.")]),t._v(" "),n("p",[t._v("First of all we make sure to call "),n("code",[t._v("QObject.__init__")]),t._v(" from our constructor. This is very important, as the example will not work without it.")]),t._v(" "),n("p",[t._v("Then we declare a signal by creating an instance of the "),n("code",[t._v("Signal")]),t._v(" class from the "),n("code",[t._v("PySide6.QtCore")]),t._v(" module. In this case, the signal carries an integer value, hence the "),n("code",[t._v("int")]),t._v(". The signal parameter name, "),n("code",[t._v("number")]),t._v(", is defined in the "),n("code",[t._v("arguments")]),t._v(" parameter.")]),t._v(" "),n("p",[t._v("Finally, we "),n("em",[t._v("decorate")]),t._v(" the "),n("code",[t._v("updateNumber")]),t._v(" method with the "),n("code",[t._v("@Slot()")]),t._v(" decorator, thus turning it into a slot. There is not concept of "),n("em",[t._v("invokables")]),t._v(" in Qt for Python, so all callable methods must be slots.")]),t._v(" "),n("p",[t._v("In the "),n("code",[t._v("updateNumber")]),t._v(" method we emit the "),n("code",[t._v("nextNumber")]),t._v(" signal using the "),n("code",[t._v("emit")]),t._v(" method. This is a bit different than the syntax for doing so from QML or C++ as the signal is represented by an object instead of being a callable function.")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" random\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Slot\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    nextNumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@Slot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("giveNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("random"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("randint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])])]),n("p",[t._v("Next up is to combine the class we just created with the boilerplate code for combining QML and Python from earlier. This gives us the following entry-point code.")]),t._v(" "),n("p",[t._v("The interesting lines are the one where we first instatiate a "),n("code",[t._v("NumberGenerator")]),t._v(". This object is then exposed to QML using the "),n("code",[t._v("setContextProperty")]),t._v(" method of the "),n("code",[t._v("rootContext")]),t._v(" of the QML engine. This exposes the object to QML as a global variable under the name "),n("code",[t._v("numberGenerator")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtGui "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QGuiApplication\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtQml "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QQmlApplicationEngine\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QUrl\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    app "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QGuiApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    engine "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QQmlApplicationEngine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    number_generator "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NumberGenerator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rootContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setContextProperty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"numberGenerator"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" number_generator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QUrl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main.qml"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rootObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    \n    \n    sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])])]),n("p",[t._v("Continuing to the QML code, we can see that we’ve created a Qt Quick Controls 2 user interface consisting of a "),n("code",[t._v("Button")]),t._v(" and a "),n("code",[t._v("Label")]),t._v(". In the button’s "),n("code",[t._v("onClicked")]),t._v(" handler, the "),n("code",[t._v("numberGenerator.updateNumber()")]),t._v(" function is called. This is the slot of the object instantiated on the Python side.")]),t._v(" "),n("p",[t._v("To receive a signal from an object that has been instantiated outside of QML we need to use a "),n("code",[t._v("Connections")]),t._v(" element. This allows us to attach a signal hanlder to an existing target.")]),t._v(" "),n("div",{staticClass:"language-qml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-qml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick.Window\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick.Controls\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Window")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("root")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("640")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("480")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("visible")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Python World!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Flow")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Give me a number!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("onClicked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberGenerator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("giveNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Label")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberLabel")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no number"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connections")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberGenerator")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token javascript-function language-javascript"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onNextNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            numberLabel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" number\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),n("h3",{attrs:{id:"properties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),n("p",[t._v("Instead of relying soley on signals and slots, the common way to expose state to QML is through properties. A property is a combination of a setter, getter and notification signal. The setter is optional, as we can also have read-only properties.")]),t._v(" "),n("p",[t._v("To try this out we will update the "),n("code",[t._v("NumberGenerator")]),t._v(" from the last example to a property based version. It will have two properties: "),n("code",[t._v("number")]),t._v(", a read-only property holding the last random number, and "),n("code",[t._v("maxNumber")]),t._v(", a read-write property holding the maximum value that can be returned. It will also have a slot, "),n("code",[t._v("updateNumber")]),t._v(" that updates the random number.")]),t._v(" "),n("p",[t._v("Before we dive into the details of properties, we create a basic Python class for this. It consists of the relevant getters and setters, but not Qt signalling. As a matter of fact, the only Qt part here is the inheritance from "),n("code",[t._v("QObject")]),t._v(". Even the names of the methods are Python style, i.e. using underscores instead of camelCase.")]),t._v(" "),n("p",[t._v("Take notice of the underscores (“"),n("code",[t._v("__")]),t._v("”) at the beginning of the "),n("code",[t._v("__set_number")]),t._v(" method. This implies that it is a private method. So even when the "),n("code",[t._v("number")]),t._v(" property is read-only, we provide a setter. We just don’t make it public. This allows us to take actions when changing the value (e.g. emitting the notification signal).")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_max_number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n            \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__set_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_max_number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__set_number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__number\n")])])]),n("p",[t._v("In order to define properties, we need to import the concepts of "),n("code",[t._v("Signal")]),t._v(", "),n("code",[t._v("Slot")]),t._v(", and "),n("code",[t._v("Property")]),t._v(" from "),n("code",[t._v("PySide2.QtCore")]),t._v(". In the full example, there are more imports, but these are the ones relevant to the properties.")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Slot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Property\n")])])]),n("p",[t._v("Now we are ready to define the first property, "),n("code",[t._v("number")]),t._v(". We start off by declaring the signal "),n("code",[t._v("numberChanged")]),t._v(", which we then invoke in the "),n("code",[t._v("__set_number")]),t._v(" method so that the signal is emitted when the value is changed.")]),t._v(" "),n("p",[t._v("After that, all that is left is to instantiate the "),n("code",[t._v("Property")]),t._v(" object. The "),n("code",[t._v("Property")]),t._v(" contructor takes three arguments in this case: the type ("),n("code",[t._v("int")]),t._v("), the getter ("),n("code",[t._v("get_number")]),t._v(") and the notification signal which is passed as a named argument ("),n("code",[t._v("notify=numberChanged")]),t._v("). Notice that the getter has a Python name, i.e. using underscore rather than camelCase, as it is used to read the value from Python. For QML, the property name, "),n("code",[t._v("number")]),t._v(", is used.")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# number")]),t._v("\n    \n    numberChanged "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__set_number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n            self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("numberChanged"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__number\n    \n    number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Property"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" get_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" notify"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("numberChanged"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("This leads us to the next property, "),n("code",[t._v("maxNumber")]),t._v(". This is a read-write property, so we need to provide a setter, as well as everything that we did for the "),n("code",[t._v("number")]),t._v(" property.")]),t._v(" "),n("p",[t._v("First up we declare the "),n("code",[t._v("maxNumberChanged")]),t._v(" signal. This time, using the "),n("code",[t._v("@Signal")]),t._v(" decorator instead of instantiating a "),n("code",[t._v("Signal")]),t._v(" object. We also provide a setter slot, "),n("code",[t._v("setMaxNumber")]),t._v(" with a Qt name (camelCase) that simply calls the Python method "),n("code",[t._v("set_max_number")]),t._v(" alongside a getter with a Python name. Again, the setter emits the change signal when the value is updated.")]),t._v(" "),n("p",[t._v("Finally we put the pieces together into a read-write property by instantiating a "),n("code",[t._v("Property")]),t._v(" object taking the type, getter, setter and notification signal as arguments.")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# maxNumber")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@Signal")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("maxNumberChanged")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@Slot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_max_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_max_number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            val "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n            self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxNumberChanged"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__number "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__set_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_max_number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number\n\n    maxNumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Property"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" get_max_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" set_max_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" notify"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("maxNumberChanged"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("Now we have properties for the current random number, "),n("code",[t._v("number")]),t._v(", and the maximum random number, "),n("code",[t._v("maxNumber")]),t._v(". All that is left is a slot to produce a new random number. It is called "),n("code",[t._v("updateNumber")]),t._v(" and simply sets a new random number.")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@Slot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__set_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("random"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("randint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__max_number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("Finally, the number generator is exposed to QML through a root context property.")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    app "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QGuiApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    engine "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QQmlApplicationEngine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    number_generator "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NumberGenerator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rootContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setContextProperty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"numberGenerator"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" number_generator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QUrl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main.qml"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rootObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    \n    \n    sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])])]),n("p",[t._v("In QML, we can bind to the "),n("code",[t._v("number")]),t._v(" as well as the "),n("code",[t._v("maxNumber")]),t._v(" properties of the "),n("code",[t._v("numberGenerator")]),t._v(" object. In the "),n("code",[t._v("onClicked")]),t._v(" handler of the "),n("code",[t._v("Button")]),t._v(" we call the "),n("code",[t._v("updateNumber")]),t._v(" method to generate a new random number and in the "),n("code",[t._v("onValueChanged")]),t._v(" handler of the "),n("code",[t._v("Slider")]),t._v(" we set the "),n("code",[t._v("maxNumber")]),t._v(" property using the "),n("code",[t._v("setMaxNumber")]),t._v(" method. This is because altering the property directly through Javascript would destroy the bindings to the property. By using the setter method explicitly, this is avoided.")]),t._v(" "),n("div",{staticClass:"language-qml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-qml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick.Window\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick.Controls\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Window")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("root")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("640")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("480")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("visible")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Python World!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Column")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Flow")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Give me a number!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("onClicked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberGenerator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Label")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberLabel")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberGenerator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("number")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Flow")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Slider")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")])]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("to")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")])]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberGenerator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxNumber")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("onValueChanged")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberGenerator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),n("h2",{attrs:{id:"exposing-a-python-class-to-qml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exposing-a-python-class-to-qml"}},[t._v("#")]),t._v(" Exposing a Python class to QML")]),t._v(" "),n("p",[t._v("Up until now, we’ve instantiated an object Python and used the "),n("code",[t._v("setContextProperty")]),t._v(" method of the "),n("code",[t._v("rootContext")]),t._v(" to make it available to QML. Being able to instantiate the object from QML allows better control over object life-cycles from QML. To enable this, we need to expose the "),n("em",[t._v("class")]),t._v(", instead of the "),n("em",[t._v("object")]),t._v(", to QML.")]),t._v(" "),n("p",[t._v("The class that is being exposed to QML is not affected by where it is intantiated. No change is needed to the class definition. However, instead of calling "),n("code",[t._v("setContextProperty")]),t._v(", the "),n("code",[t._v("qmlRegisterType")]),t._v(" function is used. This function comes from the "),n("code",[t._v("PySide2.QtQml")]),t._v(" module and takes five arguments:")]),t._v(" "),n("ul",[n("li",[t._v("A reference to the class, "),n("code",[t._v("NumberGenerator")]),t._v(" in the example below.")]),t._v(" "),n("li",[t._v("A module name, "),n("code",[t._v("'Generators'")]),t._v(".")]),t._v(" "),n("li",[t._v("A module version consisting of a major and minor number, "),n("code",[t._v("1")]),t._v(" and "),n("code",[t._v("0")]),t._v(" meaning "),n("code",[t._v("1.0")]),t._v(".")]),t._v(" "),n("li",[t._v("The QML name of the class, "),n("code",[t._v("'NumberGenerator'")])])]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" random\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtGui "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QGuiApplication\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtQml "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QQmlApplicationEngine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qmlRegisterType\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QUrl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Slot\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberGenerator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        QObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    nextNumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Signal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@Slot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("giveNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextNumber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("random"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("randint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    app "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QGuiApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    engine "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QQmlApplicationEngine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    qmlRegisterType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NumberGenerator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Generators'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NumberGenerator'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QUrl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main.qml"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rootObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    \n    \n    sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])])]),n("p",[t._v("In QML, we need to import the module, e.g. "),n("code",[t._v("Generators 1.0")]),t._v(" and then instantiate the class as "),n("code",[t._v("NumberGenerator { ... }")]),t._v(". The instance now works like any other QML element.")]),t._v(" "),n("div",{staticClass:"language-qml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-qml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick.Window\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick.Controls\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Generators\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Window")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("root")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("640")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("480")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("visible")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Python World!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Flow")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Give me a number!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("onClicked")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberGenerator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("giveNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Label")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberLabel")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no number"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NumberGenerator")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberGenerator")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Connections")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("numberGenerator")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token javascript-function language-javascript"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onNextNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            numberLabel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" number\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),n("h2",{attrs:{id:"a-model-from-python"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#a-model-from-python"}},[t._v("#")]),t._v(" A Model from Python")]),t._v(" "),n("p",[t._v("One of the more interesting types of objects or classes to expose from Python to QML are item models. These are used with various views or the "),n("code",[t._v("Repeater")]),t._v(" element to dynamically build a user interface from the model contents.")]),t._v(" "),n("p",[t._v("In this section we will take an existing python utility for monitoring CPU load (and more), "),n("code",[t._v("psutil")]),t._v(", and expose it to QML via a custom made item model called "),n("code",[t._v("CpuLoadModel")]),t._v(". You can see the program in action below:")]),t._v(" "),n("p",[n("img",{attrs:{src:a(526),alt:""}})]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("The psutil library can be found at "),n("a",{attrs:{href:"https://pypi.org/project/psutil/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://pypi.org/project/psutil/"),n("OutboundLink")],1),t._v(" .")])]),t._v(" "),n("p",[n("em",[t._v("“psutil (process and system utilities) is a cross-platform library for retrieving information on running processes and system utilization (CPU, memory, disks, network, sensors) in Python.”")])]),t._v(" "),n("p",[t._v("You can install psutil using "),n("code",[t._v("pip install psutil")]),t._v(".")]),t._v(" "),n("p",[t._v("We will use the "),n("code",[t._v("psutil.cpu_percent")]),t._v(" function ("),n("a",{attrs:{href:"https://psutil.readthedocs.io/en/latest/#psutil.cpu_percent",target:"_blank",rel:"noopener noreferrer"}},[t._v("documentation"),n("OutboundLink")],1),t._v(") to sample the CPU load per core every second. To drive the sampling we use a "),n("code",[t._v("QTimer")]),t._v(". All of this is exposed through the "),n("code",[t._v("CpuLoadModel")]),t._v(" which is a "),n("code",[t._v("QAbstractListModel")]),t._v(".")]),t._v(" "),n("p",[t._v("Item models are interesting. They allow you to represent a two dimensional data set, or even nested data sets, if using the "),n("code",[t._v("QAbstractItemModel")]),t._v(". The "),n("code",[t._v("QAbstractListModel")]),t._v(" that we use allow us to represent a list of items, so a one dimensional set of data. It is possible to implement a nested set of lists, creating a tree, but we will only create one level.")]),t._v(" "),n("p",[t._v("To implement a "),n("code",[t._v("QAbstractListModel")]),t._v(", it is necessary to implement the methods "),n("code",[t._v("rowCount")]),t._v(" and "),n("code",[t._v("data")]),t._v(". The "),n("code",[t._v("rowCount")]),t._v(" returns the number of CPU cores which we get using the "),n("code",[t._v("psutil.cpu_count")]),t._v(" method. The "),n("code",[t._v("data")]),t._v(" method returns data for different "),n("em",[t._v("roles")]),t._v(". We only support the "),n("code",[t._v("Qt.DisplayRole")]),t._v(", which corresponds to what you get when you refer to "),n("code",[t._v("display")]),t._v(" inside the delegate item from QML.")]),t._v(" "),n("p",[t._v("Looking at the code for the model, you can see that the actual data is stored in the "),n("code",[t._v("__cpu_load")]),t._v(" list. If a valid request is made to "),n("code",[t._v("data")]),t._v(", i.e. the row, column and role is correct, we return the right element from the "),n("code",[t._v("__cpu_load")]),t._v(" list. Otherwise we return "),n("code",[t._v("None")]),t._v(" which corresponds to an uninitialized "),n("code",[t._v("QVariant")]),t._v(" on the Qt side.")]),t._v(" "),n("p",[t._v("Every time the update timer ("),n("code",[t._v("__update_timer")]),t._v(") times out, the "),n("code",[t._v("__update")]),t._v(" method is triggered. Here, the "),n("code",[t._v("__cpu_load")]),t._v(" list is updated, but we also emit the "),n("code",[t._v("dataChanged")]),t._v(" signal, indicating that all data was changed. We do not do a "),n("code",[t._v("modelReset")]),t._v(" as that also implies that the number of items might have changed.")]),t._v(" "),n("p",[t._v("Finally, the "),n("code",[t._v("CpuLoadModel")]),t._v(" is exposed to QML are a registered type in the "),n("code",[t._v("PsUtils")]),t._v(" module.")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" psutil\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtGui "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QGuiApplication\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtQml "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QQmlApplicationEngine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qmlRegisterType\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" PySide6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QtCore "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Qt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QUrl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QTimer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" QAbstractListModel\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CpuLoadModel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QAbstractListModel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        QAbstractListModel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__cpu_count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" psutil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpu_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__cpu_load "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__cpu_count\n        \n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__update_timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QTimer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__update_timer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setInterval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__update_timer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__update"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__update_timer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The first call returns invalid data")]),t._v("\n        psutil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpu_percent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("percpu"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__cpu_load "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" psutil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpu_percent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("percpu"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dataChanged"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__cpu_count"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rowCount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__cpu_count\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" role"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("role "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Qt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DisplayRole "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v("\n            index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v("\n            index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__cpu_load"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v("\n            index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("column"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__cpu_load"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    app "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QGuiApplication"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    engine "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QQmlApplicationEngine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    qmlRegisterType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CpuLoadModel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PsUtils'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CpuLoadModel'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QUrl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main.qml"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" engine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rootObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    \n    \n    sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])])]),n("p",[t._v("On the QML side we use a "),n("code",[t._v("ListView")]),t._v(" to show the CPU load. The model is bound to the "),n("code",[t._v("model")]),t._v(" property. For each item in the model a "),n("code",[t._v("delegate")]),t._v(" item will be instantiated. In this case that means a "),n("code",[t._v("Rectangle")]),t._v(" with a green bar (another "),n("code",[t._v("Rectangle")]),t._v(") and a "),n("code",[t._v("Text")]),t._v(" element displaying the current load.")]),t._v(" "),n("div",{staticClass:"language-qml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-qml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick.Window\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PsUtils\n\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Window")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("root")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("640")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("480")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("visible")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CPU Load"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ListView")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("anchors.fill")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("parent")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("model")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CpuLoadModel")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("delegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rectangle")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("delegate")]),t._v("\n            \n            required property int display\n\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"white"')])]),t._v("\n            \n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rectangle")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("bar")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" delegate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100.0")])]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")])]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"green"')])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            \n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Text")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("anchors.verticalCenter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verticalCenter")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" bar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("text")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("delegate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%"')])]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);