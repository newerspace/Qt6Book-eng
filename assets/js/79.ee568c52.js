(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{548:function(e,t,i){"use strict";i.r(t);var o=i(24),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"registering-your-qt-kit"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#registering-your-qt-kit"}},[e._v("#")]),e._v(" Registering your Qt Kit")]),e._v(" "),i("p",[e._v("The Qt Kit is probably the most difficult aspect when it comes to working with Qt Creator initially. A Qt Kit is a set of a Qt version, compiler and device and some other settings. It is used to uniquely identify the combination of tools for your project build. A typical kit for the desktop would contain a C++ compiler and a Qt version (e.g. Qt 6.xx.yy) and a device (“Desktop”). After you have created a project you need to assign a kit to a project before Qt Creator can build the project. Before you are able to create a kit first you need to have a compiler installed and have a Qt version registered. A Qt version is registered by specifying the path to the "),i("code",[e._v("qmake")]),e._v(" executable. Qt Creator then queries "),i("code",[e._v("qmake")]),e._v(" for information required to identify the Qt version. This is also true for Qt 6 where CMake is the preferred build tool.")]),e._v(" "),i("p",[e._v("Adding a kit and registering a Qt version is done in the "),i("code",[e._v("Settings ‣ Build & Run")]),e._v(" entry. There you can also see which compilers are registered.")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),i("p",[e._v("Please first check if your Qt Creator has already the correct Qt version registered and then ensure a Kit for your combination of compiler and Qt and device is specified. "),i("strong",[e._v("You can not build a project without a kit.")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);