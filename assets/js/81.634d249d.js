(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{556:function(e,t,a){"use strict";a.r(t);var o=a(24),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"advanced-techniques"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-techniques"}},[e._v("#")]),e._v(" Advanced Techniques")]),e._v(" "),a("h2",{attrs:{id:"performance-of-qml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-of-qml"}},[e._v("#")]),e._v(" Performance of QML")]),e._v(" "),a("p",[e._v("QML and Javascript are interpreted languages. This means that they do not have to be processed by a compiler before being executed. Instead, they are being run inside an execution engine. However, as interpretation is a costly operation, various techniques are used to improve performance.")]),e._v(" "),a("p",[e._v("The QML engine uses just-in-time (JIT) compilation to improve performance. It also caches the intermediate output to avoid having to recompile. This works seamlessly for you as a developer. The only trace of this is that files ending with "),a("code",[e._v("qmlc")]),e._v(" and "),a("code",[e._v("jsc")]),e._v(" can be found next to the source files.")]),e._v(" "),a("p",[e._v("If you want to avoid the initial start-up penalty induced by the initial parsing you can also pre-compile your QML and Javascript. This requires you to put your code into a Qt resource file, and is described in detail in the "),a("a",{attrs:{href:"https://doc.qt.io/qt-6/qtquick-deployment.html#ahead-of-time-compilation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Compiling QML Ahead of Time"),a("OutboundLink")],1),e._v(" chapter in the Qt documentation.")])])}),[],!1,null,null,null);t.default=n.exports}}]);