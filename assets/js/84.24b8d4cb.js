(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{567:function(e,t,n){"use strict";n.r(t);var a=n(24),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"fluid-elements"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fluid-elements"}},[e._v("#")]),e._v(" Fluid Elements")]),e._v(" "),n("p",[e._v("Until now, we have mostly looked at some simple graphical elements and how to arrange and manipulate them.")]),e._v(" "),n("p",[e._v("This chapter is about how to make these changes more interesting by animating them.")]),e._v(" "),n("p",[e._v("Animations are one of the key foundations for modern, slick user interfaces, and can be employed in your user interface via states, transitions and animations. Each state defines a set of property changes and can be combined with animations on state changes. These changes are described as a transition from one state to another state.")]),e._v(" "),n("p",[e._v("Besides animations being used during transitions, they can also be used as standalone elements triggered by some scripted events.")])])}),[],!1,null,null,null);t.default=s.exports}}]);