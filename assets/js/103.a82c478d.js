(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{624:function(t,s,a){"use strict";a.r(s);var e=a(24),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"serving-ui-via-http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serving-ui-via-http"}},[t._v("#")]),t._v(" Serving UI via HTTP")]),t._v(" "),a("p",[t._v("To load a simple user interface via HTTP we need to have a web-server, which serves the UI documents. We start off with our own simple web-server using a python one-liner. But first, we need to have our demo user interface. For this, we create a small "),a("code",[t._v("RemoteComponent.qml")]),t._v(" file in our project folder and create a red rectangle inside.")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RemoteComponent.qml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rectangle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("320")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("320")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#ff0000'")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("To serve this file we can start a small python script:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PROJECT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\npython -m http.server "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),a("p",[t._v("Now our file should be reachable via "),a("code",[t._v("http://localhost:8080/RemoteComponent.qml")]),t._v(". You can test it with:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://localhost:8080/RemoteComponent.qml\n")])])]),a("p",[t._v("Or just point your browser to the location. Your browser does not understand QML and will not be able to render the document through.")]),t._v(" "),a("p",[t._v("Hopefully, Qt 6 provides such a browser in the form of the "),a("code",[t._v("qml")]),t._v(" binary. You can directly load a remote QML document by using the following command:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("qml http://localhost:8080/RemoteComponent.qml\n")])])]),a("p",[t._v("Sweet and simple.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("If the "),a("code",[t._v("qml")]),t._v(" program is not in your path, you can find it in the Qt binaries: "),a("code",[t._v("<qt-install-path>/<qt-version>/<your-os>/bin/qml")]),t._v(".")])]),t._v(" "),a("p",[t._v("Another way of importing a remote QML document is to dynamically load it using QML ! For this, we use a "),a("code",[t._v("Loader")]),t._v(" element to retrieve for us the remote document.")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// LocalHostExample.qml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Loader")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("root")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8080/RemoteComponent.qml'")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("onLoaded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// qmllint disable")]),t._v("\n        root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// qmllint disable")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("Now we can ask the "),a("code",[t._v("qml")]),t._v(" executable to load the local "),a("code",[t._v("LocalHostExample.qml")]),t._v(" loader document.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("qml LocalHostExample.qml\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("If you do not want to run a local server you can also use the gist service from GitHub. The gist is a clipboard like online services like Pastebin and others. It is available under "),a("a",{attrs:{href:"https://gist.github.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gist.github.com"),a("OutboundLink")],1),t._v(". I created for this example a small gist under the URL "),a("a",{attrs:{href:"https://gist.github.com/jryannel/7983492",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gist.github.com/jryannel/7983492"),a("OutboundLink")],1),t._v(". This will reveal a green rectangle. As the gist URL will provide the website as HTML code we need to attach a "),a("code",[t._v("/raw")]),t._v(" to the URL to retrieve the raw file and not the HTML code.")])]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GistExample.qml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Loader")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("root")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://gist.github.com/jryannel/7983492/raw'")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("onLoaded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// qmllint disable")]),t._v("\n        root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// qmllint disable")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("To load another file over the network from "),a("code",[t._v("RemoteComponent.qml")]),t._v(", you will need to create a dedicated "),a("code",[t._v("qmldir")]),t._v(" file in the same directory on the server. Once done, you will be able to reference the component by its name.")]),t._v(" "),a("h2",{attrs:{id:"networked-components"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#networked-components"}},[t._v("#")]),t._v(" Networked Components")]),t._v(" "),a("p",[t._v("Let us create a small experiment. We add to our remote side a small button as a reusable component.")]),t._v(" "),a("p",[t._v("Here's the directory structure that we will use:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./src/SimpleExample.qml\n./src/remote/qmldir\n./src/remote/Button.qml\n./src/remote/RemoteComponent.qml\n")])])]),a("p",[t._v("Our "),a("code",[t._v("SimpleExample.qml")]),t._v(" is the same as our previous "),a("code",[t._v("main.qml")]),t._v(" example:")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Loader")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("root")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("anchors.fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("parent")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8080/RemoteComponent.qml'")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("onLoaded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// qmllint disable")]),t._v("\n        root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// qmllint disable")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("In the "),a("code",[t._v("remote")]),t._v(" directory, we will update the "),a("code",[t._v("RemoteComponent.qml")]),t._v(" file so that it uses a custom "),a("code",[t._v("Button")]),t._v(" component:")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// remote/RemoteComponent.qml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rectangle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("320")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("320")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#ff0000'")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("anchors.centerIn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("parent")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Click Me'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("onClicked")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("Qt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("quit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("As our components are hosted remotely, the QML engine needs to know what other components are available remotely. To do so, we define the content of our remote directory within a "),a("code",[t._v("qmldir")]),t._v(" file:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# qmldir\r\nButton 1.0 Button.qml\r\n")])])]),a("p",[t._v("And finally we will create our dummy "),a("code",[t._v("Button.qml")]),t._v(" file:")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// remote/Button.qml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick.Controls\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("p",[t._v("We can now launch our web-server (keep in mind that we now have a "),a("code",[t._v("remote")]),t._v(" subdirectory):")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" src/serve-qml-networked-components/\npython -m http.server --directory ./remote "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),a("p",[t._v("And remote QML loader:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("qml SimpleExample.qml\n")])])]),a("h2",{attrs:{id:"importing-a-qml-components-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#importing-a-qml-components-directory"}},[t._v("#")]),t._v(" Importing a QML components directory")]),t._v(" "),a("p",[t._v("By defining a "),a("code",[t._v("qmldir")]),t._v(" file, it's also possible to directly import a library of components from a remote repository. To do so, a classical import works:")]),t._v(" "),a("div",{staticClass:"language-qml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-qml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" QtQuick\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(' "http'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//localhost:8080" as Remote')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Rectangle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("320")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("320")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")])]),t._v("\n\n    Remote.Button "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("anchors.centerIn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("parent")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("qsTr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Quit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("onClicked")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token javascript-expression language-javascript"}},[t._v("Qt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("quit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("When using components from a local file system, they are created immediately without a latency. When components are loaded via the network they are created asynchronously. This has the effect that the time of creation is unknown and an element may not yet be fully loaded when others are already completed. Take this into account when working with components loaded over the network.")])])])}),[],!1,null,null,null);s.default=n.exports}}]);